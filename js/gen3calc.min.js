function DamageCalc(){void 0===input&&(input=document.getElementById("calcInput").elements),ATK=input.attackerAtkStat.value,BasePower=input.attackerMoveBP.value,DEF=input.defenderDefStat.value,weathercheck=radioValue("weathercheck"),summary="[Level "+input.attackerLevel.value+" ",input.attackerAtkStage.value>=0&&(summary+="+"),summary+=input.attackerAtkStage.value+" "+ATK+" with "+BasePower+"BP] vs [",input.defenderDefStage.value>=0&&(summary+="+"),summary+=input.defenderDefStage.value+" "+DEF+" with "+input.defenderHPStat.value+"HP]",output=summary+"\n",input.badgeBoostAtk.checked&&(ATK=0|1.1*ATK),input.badgeBoostDef.checked&&(DEF=0|1.1*DEF),input.itemBoost.checked&&(ATK=0|1.1*ATK),input.abilityBoost.checked&&(BasePower=0|1.5*BasePower),damage.init(ATK,DEF,BasePower),input.lsrefcheck.checked&&(input.doublecheck.checked?damage.multiplier(2/3):damage.multiplier(.5)),input.doublecheck.checked&&damage.multiplier(.5),"goodweather"==weathercheck&&damage.multiplier(1.5),"badweather"==weathercheck&&damage.multiplier(.5),damage.two(),input.stabcheck.checked&&damage.multiplier(1.5),damage.multiplier(radioValue("typeeffect")),noncrit=damage.roll(input.defenderHPStat.value,damage.basedmg),input.outputVerbose.checked?output+=noncrit.rollsVerbose:output+=noncrit.rolls[0]+" ("+noncrit.percminroll+"%)  - "+noncrit.rolls[15]+" ("+noncrit.percmaxroll+"%)",output+="\n"+noncrit.OHKO+"% chance to OHKO",input.outputVerbose.checked&&(output+=" ("+noncrit.percminroll+"% to "+noncrit.percmaxroll+"%)"),input.showCrits.checked?(input.outputarea.style.height="102px",output+="\n"+summary+" CRIT\n",crithit=damage.roll(input.defenderHPStat.value,damage.critdmg),input.outputVerbose.checked?output+=crithit.rollsVerbose+"\n"+crithit.OHKO+"% chance to OHKO ("+crithit.percminroll+"% to "+crithit.percmaxroll+"%)":output+=crithit.rolls[0]+" ("+crithit.percminroll+"%)  - "+crithit.rolls[15]+" ("+crithit.percmaxroll+"%)\n"+crithit.OHKO+"% chance to OHKO"):input.outputarea.style.height="56px",input.outputarea.innerHTML=output,0==noncrit.OHKO?input.outputarea.className="lives":100==noncrit.OHKO?input.outputarea.className="kill":input.outputarea.className="range"}function radioValue(e){rObj=document.getElementsByName(e);for(var t=0;t<rObj.length;t++)if(rObj[t].checked)return rObj[t].value;return!1}function openTypePicker(e){pickerDIV=document.getElementById("typePicker"),"AtkType"==e?(pickerDIV.getElementsByTagName("span")[0].innerHTML="Choose the Attack Type:",pickerDIV.style.left="922px",pickerDIV.style.top="134px",currentPick="AtkType",$(pickerDIV.getElementsByTagName("img")[0]).hide()):"DefTypeA"==e?(pickerDIV.getElementsByTagName("span")[0].innerHTML="Choose the Defender's first type:",pickerDIV.style.left="922px",pickerDIV.style.top="190px",currentPick="DefTypeA",$(pickerDIV.getElementsByTagName("img")[0]).hide()):(pickerDIV.getElementsByTagName("span")[0].innerHTML="Choose the Defender's secondary type:",pickerDIV.style.left="1012px",pickerDIV.style.top="190px",currentPick="DefTypeB",$(pickerDIV.getElementsByTagName("img")[0]).show()),$(pickerDIV).show(),$(document.getElementById("typePicker-clicktrap")).show()}function pickType(e){document.getElementById(currentPick+"Img").src="i/"+e+".gif","AtkType"==currentPick?(AtkType=e,console.log("Picked AtkType ",e)):"DefTypeA"==currentPick?(DefTypeA=e,console.log("Picked DefTypeA ",e)):(DefTypeB=e,console.log("Picked DefTypeB ",e)),$("#typePicker").hide(),$("#typePicker-clicktrap").hide(),document.getElementById("typeEffectHelpOutput").innerHTML=typeReference[AtkType][DefTypeA]*typeReference[AtkType][DefTypeB],document.getElementById("MoveType").src="i/"+typeReference[AtkType].type+".png",document.getElementById("MoveTypeText").innerHTML=typeReference[AtkType].type}var input=void 0,damage={basedmg:0,critdmg:0,multiplier:function(e){e=+e,this.basedmg=0|this.basedmg*e,this.critdmg=0|this.critdmg*e},init:function(e,t,r){aS=input.attackerAtkStage.value,dS=input.defenderDefStage.value,L=input.attackerLevel.value,aS>0?SM=(10+5*aS)/10:aS<0?SM=10/(10+-5*aS):SM=1,e=0|e*SM,dS<0&&(SM=10/(10+-5*dS),t=0|t*SM),this.critdmg=0|Math.trunc(Math.trunc(2*L/5+2)*e*r/t)/50,dS>0&&(SM=(10+5*dS)/10,t=0|t*SM),this.basedmg=0|Math.trunc(Math.trunc(2*L/5+2)*e*r/t)/50},two:function(){this.basedmg+=2,this.critdmg+=2,this.critdmg*=2},roll:function(e,t){for(rolls=[],rollsVerbose="",missedrange=0,i=85;i<101;i++)roll=0|t*i/100,rolls.push(roll),rollsVerbose+=roll,100!=i&&(rollsVerbose+=", "),e-roll>0&&(missedrange+=1);return OHKO=(16-missedrange)/16*100,percminroll=0|100*rolls[0]/e,percmaxroll=0|100*rolls[15]/e,{rolls:rolls,rollsVerbose:rollsVerbose,OHKO:OHKO,percminroll:percminroll,percmaxroll:percmaxroll}}},currentPick="AtkType",AtkType="normal",DefTypeA="normal",DefTypeB="none",typeReference={normal:{type:"Physical",none:1,normal:1,fire:1,water:1,grass:1,electric:1,ice:1,psychic:1,ghost:0,dark:1,poison:1,ground:1,rock:.5,steel:.5,fighting:1,flying:1,bug:1,dragon:1},fire:{type:"Special",none:1,normal:1,fire:.5,water:.5,grass:2,electric:1,ice:2,psychic:1,ghost:1,dark:1,poison:1,ground:1,rock:.5,steel:2,fighting:1,flying:1,bug:2,dragon:.5},water:{type:"Special",none:1,normal:1,fire:2,water:.5,grass:.5,electric:1,ice:1,psychic:1,ghost:1,dark:1,poison:1,ground:2,rock:2,steel:1,fighting:1,flying:1,bug:1,dragon:.5},grass:{type:"Special",none:1,normal:1,fire:.5,water:2,grass:.5,electric:1,ice:1,psychic:1,ghost:1,dark:1,poison:.5,ground:2,rock:2,steel:.5,fighting:1,flying:.5,bug:.5,dragon:.5},electric:{type:"Special",none:1,normal:1,fire:1,water:2,grass:.5,electric:.5,ice:1,psychic:1,ghost:1,dark:1,poison:1,ground:0,rock:1,steel:1,fighting:1,flying:2,bug:1,dragon:.5},ice:{type:"Special",none:1,normal:1,fire:.5,water:.5,grass:2,electric:1,ice:.5,psychic:1,ghost:1,dark:1,poison:1,ground:2,rock:1,steel:.5,fighting:1,flying:2,bug:1,dragon:2},psychic:{type:"Special",none:1,normal:1,fire:1,water:1,grass:1,electric:1,ice:1,psychic:.5,ghost:1,dark:0,poison:2,ground:1,rock:1,steel:.5,fighting:2,flying:1,bug:1,dragon:1},ghost:{type:"Physical",none:1,normal:0,fire:1,water:1,grass:1,electric:1,ice:1,psychic:2,ghost:2,dark:.5,poison:1,ground:1,rock:1,steel:.5,fighting:1,flying:1,bug:1,dragon:1},dark:{type:"Special",none:1,normal:1,fire:1,water:1,grass:1,electric:1,ice:1,psychic:2,ghost:2,dark:.5,poison:1,ground:1,rock:1,steel:.5,fighting:.5,flying:1,bug:1,dragon:1},poison:{type:"Physical",none:1,normal:1,fire:1,water:1,grass:2,electric:1,ice:1,psychic:1,ghost:.5,dark:1,poison:.5,ground:.5,rock:.5,steel:0,fighting:1,flying:1,bug:1,dragon:1},ground:{type:"Physical",none:1,normal:1,fire:2,water:1,grass:.5,electric:2,ice:1,psychic:1,ghost:1,dark:1,poison:2,ground:1,rock:2,steel:2,fighting:1,flying:0,bug:.5,dragon:1},rock:{type:"Physical",none:1,normal:1,fire:2,water:1,grass:1,electric:1,ice:2,psychic:1,ghost:1,dark:1,poison:1,ground:.5,rock:1,steel:.5,fighting:.5,flying:2,bug:2,dragon:1},steel:{type:"Physical",none:1,normal:1,fire:.5,water:.5,grass:1,electric:.5,ice:2,psychic:1,ghost:1,dark:1,poison:1,ground:1,rock:2,steel:.5,fighting:1,flying:1,bug:1,dragon:1},fighting:{type:"Physical",none:1,normal:2,fire:1,water:1,grass:1,electric:1,ice:2,psychic:.5,ghost:0,dark:2,poison:.5,ground:1,rock:2,steel:2,fighting:1,flying:.5,bug:.5,dragon:1},flying:{type:"Physical",none:1,normal:1,fire:1,water:1,grass:2,electric:.5,ice:1,psychic:1,ghost:1,dark:1,poison:1,ground:1,rock:.5,steel:.5,fighting:2,flying:1,bug:2,dragon:1},bug:{type:"Physical",none:1,normal:1,fire:.5,water:1,grass:2,electric:1,ice:1,psychic:2,ghost:.5,dark:2,poison:.5,ground:1,rock:1,steel:.5,fighting:.5,flying:.5,bug:1,dragon:1},dragon:{type:"Special",none:1,normal:1,fire:1,water:1,grass:1,electric:1,ice:1,psychic:1,ghost:1,dark:1,poison:1,ground:1,rock:1,steel:.5,fighting:1,flying:1,bug:1,dragon:2},blankcopy:{type:"Physical",none:1,normal:1,fire:1,water:1,grass:1,electric:1,ice:1,psychic:1,ghost:1,dark:1,poison:1,ground:1,rock:1,steel:1,fighting:1,flying:1,bug:1,dragon:1}};
//see gen3calc.js and typeeffect.js for pretty code